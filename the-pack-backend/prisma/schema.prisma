// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//Creates a table containing user information
model User {
  id        String      @id @default(uuid())
  name      String    
  email     String    @unique
  password String
  phoneNum Int?
  role Role @default(CLIENT)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  //The users chosen coach
  usersCoach Coach? @relation(fields: [usersCoachid], references: [id])
  usersCoachid String?
  
  // is a foreign key for userClassrooms
 // userClassrooms userClassrooms[]

  // is a foreign key for nutrition tracker
//  nutritionTracker nutritionTracker[]
}

model Coach{
  id        String    @id @default(uuid())
  name      String    
  email     String    @unique
  password String
  phoneNum  Int?       @unique
  role      Role      @default(COACH)
  
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  
  //Foreign keys for these classes
  //coachesClasses CoachesClassroom[] 

  User User[]

  announcements   announcements[]

}

model announcements{
  
  id String @id @default(uuid())
  title     String   @db.VarChar(255)
  content   String?
  author    Coach     @relation(fields: [authorId], references: [id])
  authorId  String
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}




enum Role {
  CLIENT
  COACH
  ADMIN
}



